<project name="Intrepid" default="dist" basedir=".">
	<description>
		Builds the main Intrepid tree
	</description>


	<!--
	  -=  Global properties
	  -->
	<property name="src_subtree" value="com/starlight/intrepid"/>

	<property name="build.javadocs" value="build/javadocs"/>
	<property name="report.tests" value="build/test_reports"/>
	<property name="dist" value="dist"/>


	<!--
	  -= Targets
	  -->


	<!-- =============================================================== -->
	<!-- The main target for building a release. This will perform a     -->
	<!-- "clean" followed by a "dist".                                   -->
	<!-- =============================================================== -->
	<target name="release"
		description="Do everything for a release: clean, build everything and test">

		<fail unless="build.number"
			message="System property 'build.number' must be set."/>

		<antcall target="clean"/>
		<antcall target="test"/>
		<antcall target="dist"/>


		<antcall target="-buildArchives"/>
	</target>


	<target name="-buildArchives" depends="-init">
		<tar tarfile="intrepid-${version}.tar" basedir="dist"/>
		<gzip src="intrepid-${version}.tar"
			zipfile="dist/intrepid-${version}.tar.gz"/>
		<delete file="intrepid-${version}.tar"/>

		<zip destfile="dist/intrepid-${version}.zip" basedir="dist"
			excludes="**/*.tar, **/*.tar.gz, **/*.tgz"/>
	</target>


	<!-- General setup -->
	<target name="-init" depends="-findVersion">
		<echo message="${fullVersion}"/>

		<!-- Create timestamp -->
		<tstamp/>

		<!-- Create build directory -->
		<mkdir dir="build"/>
		<mkdir dir="build/classes"/>
		<mkdir dir="build/gui_tools_classes"/>
		<mkdir dir="build/lib"/>
	</target>


	<target name="clean" description="Clean old data">
		<delete dir="build"/>
		<delete dir="dist"/>
	</target>


	<target name="compile" description="Compile source" depends="-init">
		<javac srcdir="src/${src_subtree}"
			destdir="build/classes"
			defaultexcludes="yes"
			debug="on" target="1.8">

			<classpath>
				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>

		<copy todir="build/classes/${src_subtree}">
			<fileset dir="src/${src_subtree}">
				<include name="**/*.properties"/>
				<include name="**/*.props"/>
				<include name="**/*.gif"/>
				<include name="**/*.jpg"/>
				<include name="**/*.png"/>
				<include name="**/*.xml"/>
				<include name="**/*.dtd"/>
				<include name="**/*.txt"/>
				<!-- Exclude Ant build files -->
				<exclude name="**/build.xml"/>
				<exclude name="**/build.properties"/>
				<!-- Include HTML files except "package.html" -->
				<include name="**/*.html"/>
				<exclude name="**/package.html"/>
			</fileset>
		</copy>
	</target>

	<target name="compile_gui_tools" description="Compile GUI tools source"
		depends="compile">

		<javac srcdir="gui_tools/src/${src_subtree}" destdir="build/gui_tools_classes"
			defaultexcludes="yes" debug="on" target="1.8">

			<classpath>
				<pathelement location="build/classes"/>
				<fileset dir="gui_tools/lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>

        <!-- Copy resources -->
        <copy todir="build/gui_resources">
            <fileset dir="gui_tools/resources"/>
        </copy>
	</target>


	<target name="dist" description="Build and sign jars">
		<antcall target="clean"/>
		<antcall target="compile"/>
		<antcall target="compile_gui_tools"/>

		<!-- Record the build number -->
		<tstamp>
			<format property="build.time" pattern="yyMMdd-hhmm"/>
		</tstamp>
		<echo file="build/classes/build.time" append="false"
			message="${build.time}"/>
		<echo message="Created build.time file"/>

		<mkdir dir="dist"/>
		<mkdir dir="dist/lib"/>
		<mkdir dir="dist/dist"/>
		<mkdir dir="dist/docs"/>

		<!-- Clear the dist dir -->
		<delete includeemptydirs="true">
			<fileset dir="dist" includes="**/*"/>
		</delete>

		<antcall target="jar"/>
		<antcall target="javadoc"/>


		<!-- Save the build number -->
		<antcall target="-print_buildNumber"/>

		<!-- Copy source -->
		<copy todir="dist/src">
			<fileset dir="src"/>
		</copy>
		<copy todir="dist/test">
			<fileset dir="test"/>
		</copy>

		<!-- Copy javadocs -->
		<copy todir="dist/docs/javadocs">
			<fileset dir="${build.javadocs}" includes="**"/>
		</copy>

		<!-- Copy (external) libs -->
		<copy todir="dist/lib">
			<fileset dir="lib" includes="**"/>
		</copy>

		<!-- Copy Intrepid lib -->
		<copy todir="dist/dist">
			<fileset dir="build" includes="intrepid*.jar"/>
		</copy>

		<!-- Copy top-level files -->
		<copy todir="dist">
			<fileset dir="." includes="*.txt"/>
			<fileset dir="." includes="*.xml"/>
		</copy>
	</target>


	<target name="jar" description="Build jars" depends="compile,-init">
		<mkdir dir="dist"/>

		<jar jarfile="build/intrepid-${version}.jar"
			basedir="build/classes"
			includes="${src_subtree}/**,build.time"
			index="false"/>

		<jar jarfile="build/intrepid-gui-${version}.jar" index="false">
            <fileset dir="build/gui_tools_classes"
                includes="${src_subtree}/**,build.time"/>
            <fileset dir="build/gui_resources"/>
        </jar>
	</target>


	<target name="-compile.tests" depends="compile">
		<mkdir dir="build/test_classes"/>
		<javac debug="on" srcdir="test" destdir="build/test_classes">
			<classpath>
				<pathelement location="build/classes"/>
				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="lib/test">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="test" depends="-compile.tests">
		<mkdir dir="${report.tests}"/>
		<mkdir dir="${report.tests}/raw"/>

		<junit printsummary="yes" haltonfailure="yes" showoutput="yes"
			fork="yes" forkmode="once" maxmemory="512m">

			<jvmarg value="-Dintrepid.lease.duration=2000"/>
			<jvmarg value="-Dintrepid.lease.prune_interval=1000"/>
			<jvmarg value="-Dintrepid.local_call_handler.initial_reservation=10000"/>
			<jvmarg value="-Dintrepid.req_invoke_ack_rate_sec=1"/>
			<classpath>
				<pathelement location="build/classes"/>
				<pathelement location="build/test_classes"/>
				<pathelement path="${java.class.path}"/>
				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="lib/test">
					<include name="*.jar"/>
				</fileset>
			</classpath>
			<batchtest todir="${report.tests}/raw">
				<formatter type="xml"/>
				<fileset dir="test">
					<include name="**/*Test.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>


	<target name="javadoc" depends="compile,-init">
		<mkdir dir="${build.javadocs}"/>

		<javadoc destdir="${build.javadocs}"
			maxmemory="256m"
			packagenames="com.starlight.intrepid.*"
			excludepackagenames="gnu.trove.impl.*"
			author="false"
			version="false"
			windowtitle="Intrepid ${fullVersion}"
			doctitle="Intrepid ${fullVersion}"
			header="&lt;a href=&quot;http://intrepid2.sourceforge.net/&quot;>Intrepid&lt;/a>">
			<sourcepath>
				<path location="src"/>
			</sourcepath>

			<classpath>
				<pathelement location="build/classes"/>
				<pathelement location="build/gui_tools_classes"/>
				<fileset dir="gui_tools/lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javadoc>
	</target>

	<target name="-print_buildNumber">
		<echo file="dist\intrepid.build" append="false">${version}</echo>
	</target>

	<target name="todo_report">
		<java classname="com.starlight.tools.TCFileRegexCounter"
			args="\btodo\b.* ${basedir} src test">

			<classpath>
				<fileset dir="lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</java>
	</target>


    <!-- VERSION DISCOVERY -->

    <target name="-findVersion" depends="-version_versionNumber,-version_buildNumber,-version_none"/>

    <target name="-version_versionNumber" if="version.number">
        <property name="version" value="${version.number}"/>
        <property name="fullVersion" value="version ${version.number}"/>
    </target>

    <target name="-version_buildNumber" if="build.number" unless="version.number">
        <property name="version" value="${build.number}"/>
        <property name="fullVersion" value="build ${build.number}"/>
    </target>

    <target name="-version_none">
        <tstamp>
            <format property="version" pattern="yyMMddHHmmss"/>
            <format property="fullVersion" pattern="'build time' yyMMddHHmmss"/>
        </tstamp>
    </target>
</project>